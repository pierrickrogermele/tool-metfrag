#!/bin/bash

# See http://c-ruttkies.github.io/MetFrag/projects/metfrag22cl/

#############
# CONSTANTS #
#############

SCRIPTDIR=$(dirname $0)

MSPOS=pos
MSNEG=neg

DBPUBCHEM=pubchem
DBKEGG=kegg

#########
# ERROR #
#########

function error {
	printf "ERROR: $1\n" >&2
	exit 1
}

####################
# GET OPTION VALUE #
####################

function get_opt_val {
	if [ -z "$2" ] ; then
		error "\"$1\" requires a non-empty option argument."
	fi
	echo $2
}

#############
# READ ARGS #
#############

function read_args {

	g_generate_param_file=yes
	g_keep_generated_param_file=

	while true ; do
		case $1 in
			-f|--file|--param-file) g_param_file=$(get_opt_val $1 $2) ; g_generate_param_file= ; shift ;;
			--output-param-file) g_param_file=$(get_opt_val $1 $2) ; g_keep_generated_param_file=yes ; shift ;;
			-d|--db|--database) g_db=$(get_opt_val $1 $2) ; shift ;;
			-m|--mode) g_mode=$(get_opt_val $1 $2) ; shift ;;
			-s|--spectrum|--spectrum-file) g_spectrum_file=$(get_opt_val $1 $2) ; shift ;;
			-?*) error "Unknown option \"$1\"." ;;
			*) break
		esac
		shift
	done

	# Check parameters
	if [ -n "$g_generate_param_file" ] ; then
		if [ -z "$g_db" ] ; then error "You must select a database through -d option." ; fi
		if [ "$g_db" != "$DBPUBCHEM" -a "$g_db" != "$DBKEGG" ] ; then error "The database must one of \"$DBKEGG\" or \"$DBPUBCHEM\"." ; fi
		if [ -z "$g_spectrum_file" ] ; then error "You must specify a spectrum file through -s option." ; fi
		if [ ! -f "$g_spectrum_file" ] ; then error "Cannot find the spectrum file \"$g_spectrum_file\"." ; fi
		if [ -z "$g_mode" ] ; then error "You must specify an MS mode through -m option." ; fi
		if [ "$g_mode" != "$MSPOS" -a "$g_mode" != "$MSNEG" ] ; then error "MS mode must be either \"$MSPOS\" or \"$MSNEG\"." ; fi
	fi
}

#####################
# CREATE PARAM FILE #
#####################

function create_param_file {

# Get database tag
case $g_db in
	$DBPUBCHEM) database=PubChem ;;
	$DBKEGG) database=KEGG ;;
esac

# Get mode tag
case $g_mode in
	$MSPOS) mode=True ;;
	$MSNEG) mode=False ;;
esac

	cat >$g_param_file <<EOF
#	
# data file containing mz intensity peak pairs (one per line)	
#	
PeakListPath = $g_spectrum_file
#
# Database parameters -> how to retrieve candidates	
#	
MetFragDatabaseType = $database
NeutralPrecursorMolecularFormula = C9H11Cl3NO3PS	
NeutralPrecursorMass = 348.926284	
#	
# peak matching parameters	
#	
FragmentPeakMatchAbsoluteMassDeviation = 0.001	
FragmentPeakMatchRelativeMassDeviation = 5	
PrecursorIonMode = 1	
IsPositiveIonMode = $mode
#	
# scoring parameters	
#	
MetFragScoreTypes = FragmenterScore	
MetFragScoreWeights = 1.0	
#	
# output	
# SDF, XLS, CSV, ExtendedXLS, ExtendedFragmentsXLS	
#	
MetFragCandidateWriter = CSV
SampleName = example1	
ResultsPath = .	
#	
# following parameteres can be kept as they are	
#	
MaximumTreeDepth = 2	
MetFragPreProcessingCandidateFilter = UnconnectedCompoundFilter	
MetFragPostProcessingCandidateFilter = InChIKeyFilter	
# NumberThreads = 1
EOF
}

################
# CALL METFRAG #
################

function call_metfrag {
	java -jar $SCRIPTDIR/MetFrag2.2-CL.jar $g_param_file
}

########
# MAIN #
########

read_args "$@"

if [ -n "$g_generate_param_file" ] ; then
	[ -n "$g_param_file" ] || g_param_file=$(mktemp -t metfrag.XXXXXX)
	create_param_file
	call_metfrag
	[ -z "$g_keep_generated_param_file" ] && rm $g_param_file
else
	call_metfrag
fi
